//
//  LightBASIC.h.pch
//  LightBASIC
//
//  Created by Albert Varaksin on 25/02/2012.
//  Copyright (c) 2012 LightBASIC development team. All rights reserved.
//


// use c++11 standard library for shared_ptr, hash maps, etc...
#include <vector>
#include <map>
#include <stdexcept>
#include <algorithm>
#include <memory>
#include <iostream>
#include <fstream>
#include <sstream>
#include <iterator>
#include <cctype>
#include <string>
#include <inttypes.h>
#include <unordered_map>
// boost libraries
#include <boost/filesystem.hpp>
#include <boost/pool/pool.hpp>
#include <boost/algorithm/string/join.hpp>


// some helpers
namespace lbc {
    
    // namespace shortcuts
    using namespace std;
    namespace FS = boost::filesystem;

    /**
     * Base class for exceptions
     */
    struct Exception : public runtime_error
    {
        // Create new instance of Exception
        explicit Exception(const string & message) : runtime_error(message) {}
    }; 

    /**
     * NonCopyable c++11 style
     */
    struct NonCopyable
    {
        NonCopyable() = default;
        NonCopyable(const NonCopyable &) = delete;
        NonCopyable & operator = (const NonCopyable &) = delete;
    };
}
